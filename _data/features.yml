- left_image: assets/img/simple.png
  left_title: Simple
  left_description: |-
    The most important goal of STAG is its ease of use. 
    
    The sensor developer himself should have no or as little 
    effort as possible to connect a sensor to STAG and thus 
    also to the IT world. A sensor should register with STAG 
    and then automatically become visible to the IT world via 
    the interface and thus accessible to other systems.  
  right_image: assets/img/modular.png
  right_title: Modular
  right_description: |-
    The architecture of STAG has been defined in such a way 
    that STAG itself can be extended by various technology 
    or protocol adapters. This modular structure makes it 
    possible to add further interfaces to sensor systems
    or cloud based solutions at a later date or to switch 
    between different protocols. 
- left_image: assets/img/cpp_icon.svg
  left_title: C++ based
  left_description: |-
    STAG is completely written in C/C++ with cmake as build 
    tool and conan for dependency and library management. 
  right_image: assets/img/platform_independent.png
  right_title: Platform independent
  right_description: |-
    STAG can be compiled an run on Linux as well as Windows 
    and Mac. Additional, it is compatible with X86 and ARM 
    architecture and thus can be executed on small embedded 
    Linux device like Raspberry as well as on virtualized 
    backend servers. 
